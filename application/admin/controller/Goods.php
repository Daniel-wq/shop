<?php

namespace app\admin\controller;

use app\common\model\Cargo;
use think\Controller;
use think\Request;
use app\common\model\Goods as GoodsModel;
use app\common\model\Category;
class Goods extends Common
{
    protected $db;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->db = new GoodsModel();
    }


    /**
     * 商品列表
     *
     * @return \think\Response
     */
    public function index()
    {
        $field = db('goods')->alias('g')//别名
                ->join('__CATEGORY__ c','g.cate_id=c.id')
                ->field("g.id,g.gname,g.thumb,g.price,c.name")
                ->select();
        return view('index',compact('field'));
    }

    /**
     * 添加商品.
     *
     * @return \think\Response
     */
    public function create()
    {

        $cateData = Category::all();
        $cateData = \houdunwang\arr\Arr::tree($cateData,'name','id','pid');

        return view('create',compact('cateData'));
    }

    /**
     * 保存商品
     *
     * @param  \think\Request  $request
     * @return \think\Response
     */
    public function save(Request $request)
    {

        if (IS_POST){
//            $a = Request::instance()->post();
//            p($a);

            $db = new GoodsModel();
            $db->gname = input('post.gname');
            $db->price = input('post.price');
            $db->thumb = input('post.thumb');
            $db->pics = input('post.pics');
            $db->content = input('post.content');
            $db->details = input('post.details');
            $db->click = input('post.click');
            $db->cate_id = input('post.cate_id');
            $db->save();

            //添加货物表cargos
            foreach (json_decode(input('post.cargos'),true) as $v){
                $db->assCargos()->save([
                    'total' =>$v['total'],
                    'attribute' =>$v['attribute']
                ]);
            }
            $this->success('添加成功','/admin/goods');
        }
    }

    /**
     * 显示指定的资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function read($id)
    {
        //
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //获取旧数据
        $oldData = GoodsModel::get($id);
        //halt($oldData->toArray());
        //获得货品信息
        $oldCargo = $oldData->assCargos()->select();
        $oldCargo = json_encode($oldCargo,JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES);
        //halt($oldCargo);
        //$this->assign(oldCargo,$oldCargo);
        //获得商品分类
        $cateData = Category::all();
        $cateData = \houdunwang\arr\Arr::tree($cateData,'name','id','pid');
        //halt($cateData);
        //分配数据
        return view('',compact('oldData','oldCargo','cateData'));
    }

    /**
     * 保存更新的资源
     *
     * @param  \think\Request  $request
     * @param  int  $id
     * @return \think\Response
     */
    public function update(Request $request, $id)
    {
        if (IS_POST){
            $db = GoodsModel::get($id);
            $db->gname = input('post.gname');
            $db->price = input('post.price');
            $db->thumb = input('post.thumb');
            $db->pics = input('post.pics');
            $db->content = input('post.content');
            $db->details = input('post.details');
            $db->click = input('post.click');
            $db->cate_id = input('post.cate_id');
            $db->save();

            //先删再添加
            $db->assCargos()->delete();
            //添加货物表cargos
            foreach (json_decode(input('post.cargos'),true) as $v){
                $db->assCargos()->save([
                    'total' =>$v['total'],
                    'attribute' =>$v['attribute']
                ]);
            }
            $this->success('修改成功','/admin/goods');
        }
    }

    /**
     * 删除指定资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function delete($id)
    {
        //删除商品
        //GoodsModel::find($id)->delete();
        GoodsModel::destroy($id);
        //删除货品
        Cargo::where('goods_id',$id)->delete();
        $this->success('删除成功');
    }
}
